name: Release

on:
  push:
    tags:
      - '*'

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  MACOSX_DEPLOYMENT_TARGET: 10.7
  # Emit backtraces on panics.
  RUST_BACKTRACE: 1

jobs:
  github_build:
    name: Build ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # List of platforms, this must be in sync with the list of platforms in ci.yaml
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: zinnia-linux-x64.tar.gz

          - target: x86_64-apple-darwin
            os: macos-latest
            name: zinnia-macos-x64.tar.gz

          - target: aarch64-apple-darwin
            os: macos-latest
            name: zinnia-macos-arm64.tar.gz

          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: zinnia-windows-x64.zip
            rustflags: -C target-feature=+crt-static -C lto=off
            #                                        ^^^^^^^^^^
            # LTO is temporarily disabled, see https://github.com/rust-lang/rust/issues/107781

    runs-on: ${{ matrix.os }}
    continue-on-error: true
    env:
      RUSTFLAGS: ${{ matrix.rustflags || '' }}
    steps:
      - name: Setup | Install Protoc
        uses: arduino/setup-protoc@ab6203da1c3118e4406048171b09238ad31ad73e # latest
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup | Checkout
        uses: actions/checkout@v3

      - name: Setup | Rust
        uses: dtolnay/rust-toolchain@52e69531e6f69a396bc9d1226284493a5db969ff # v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Build | Build
        run: cargo build --release --locked --target ${{ matrix.target }}

      - name: Post Build | Prepare artifacts [Windows]
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          7z a ../../../${{ matrix.name }} zinnia.exe
          cd -

      - name: Post Build | Prepare artifacts [-nix]
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          tar czvf ../../../${{ matrix.name }} zinnia
          cd -

      - name: Release | Upload artifacts
        uses: softprops/action-gh-release@d4e8205d7e959a9107da6396278b2f1f07af0f9b
        with:
          draft: true
          files: ${{ matrix.name }}
          fail_on_unmatched_files: true
